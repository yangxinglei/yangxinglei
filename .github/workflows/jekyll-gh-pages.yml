name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # 当推送到 main 分支时触发
  push:
    branches: ["main"]

  # 允许从 Actions 选项卡手动触发
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限
permissions:
  contents: read
  pages: write
  id-token: write

# 并发控制，确保同一时间只有一个部署任务运行
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 构建任务
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. 检出代码
      - name: Checkout
        uses: actions/checkout@v4

      # 2. 设置 Ruby 环境
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1' # 根据你的 Jekyll 项目需求选择合适的 Ruby 版本
          bundler-cache: true # 自动缓存 Gemfile.lock 中的依赖

      # 3. 安装 Jekyll 和依赖
      - name: Install dependencies
        run: |
          gem install bundler
          bundle install

      # 4. 配置 GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # 5. 使用 Jekyll 构建站点
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      # 6. 上传构建产物
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # 部署任务
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      # 7. 部署到 GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
